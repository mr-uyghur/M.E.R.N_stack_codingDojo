Mongo shell command
C:\Program Files\MongoDB\Server\4.4\bin\mongo.exe
--------------------------------------------------------------
cls to clear terminal
-------------------------------------------------------

MONGO CMDS:

show dbs
-------------------------------------------

create a new data base:
use <data base name>
use example-db
---------------------------------------------------


drop a data base cmd:
use.<databse name>
db.DropDatabase()
----------------------------------------------


show collections
-------------------------------------------------------


crete new collections. (Make new tables in the data base):
db.createCollection('collection-name')
----------------------------------------------------

remove a collection:
db.collection-name.drop()
--------------------------------------------------------

add data to collection:
db.collection-name.insert({ some-key:some-value })
db.example.insert({ name:'Ali', status:'programming' })
-------------------------------------------------------

Find all the data in a collection:
dn.collection-name.find().pretty()
---------------------------------------------------------

Find specific collections
db.collections-name.find({ name:value })
db.example.find({name:'Ali'})----- . find all the objects that has {name:'Ali'}
db.example.find({_id:ObjectId("Some Id")})------- Can also use Object Id to find a specific one
--------------------------------------------------------

remove some specific data from a collection:
db.collection-name.remove({some-name: 'some value'})
db.example.remove({name:'Ali'})-------- will remove every data with name :'Ali'
----------------------------------------------------------------------------------------------

remove one specific data from a collection:
db.collection-name.remove({some-name:'some value', true})---- if the second parameter(true) isn't included, it will delete all objects that matches the first parameter
or use object id to be more specific.
---------------------------------------------------------------------------------

Update a data:
db.collection-name.update({name:'value'},{set:{new-name:'new value'}})
db.example.update({name:'Ali}, {set{interest:'reading books'}})
also, feel free to use object ID for the first prameter to to update a specific data
------------------------------------------------------------------------------------------------

Mongo shell operators
$gt (greater than)
$gte (greater than or equal to)
$lt (less than)
$lte (less than or equal to)
$in (in array)
-----------------------------------------------------------------------
find number of students is greater than 15:
db.dojos.find({number_of_students: {$gt: 15}})
----------------------------------------------------------------------------


Mongo Operators with arrays
$push (Push to an array contained within a document.)
we wanted to add an element in the interests array:
db.students.update({_id: ObjectId("5463d871a6a96d5ed6252f4d")}, {$push: {interests: 'snowboarding'}})


$pop (Removes either the first or last element from an array)
db.COLLECTION.update({QUERY}, {$pop: {array_key: (1 or -1)}})
Use 1 for the last item in the array, -1 for the first item.


$addToSet (It functions just like $push.  However, $addToSet only adds to the specified array if the value doesn't already exist (thereby preventing duplicate entries).)


$pull (Removes a specified value from an array, unlike $pop, which removes by location.)
db.COLLECTION.update({QUERY}, {$pull: {array_key: VALUE}})
This will remove all instances of VALUE from the documents with the array specified by the array_key that match QUERY.
-------------------------------------------------------------------------------------------











